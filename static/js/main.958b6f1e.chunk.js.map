{"version":3,"sources":["firebase.js","store/UserContext.js","components/PrivateRoute.js","components/Copyright.jsx","services/index.js","pages/User/SignIn.jsx","pages/User/SignUp.jsx","constants/ActionTypes.js","store/PatientContext.js","pages/Home/components/SideMenuItems.jsx","pages/Profile/index.js","components/TextInput.jsx","pages/Patients/Patients.jsx","pages/Reports/Reports.jsx","pages/Reports/index.js","pages/Home/Home.jsx","pages/Home/index.js","Navigation.jsx","theme.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","getUser","Promise","resolve","reject","then","res","catch","err","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","details","setDetails","history","useHistory","handelChange","e","target","name","handelSubmit","a","console","log","push","error","Container","maxWidth","CssBaseline","className","Avatar","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","FormControlLabel","control","Checkbox","Button","onClick","Grid","container","item","xs","Box","mt","SignUp","noValidate","sm","justify","Object","freeze","GET_PATIENTS","GET_PATIENTS_SUCCESS","GET_PATIENTS_ERROR","SET_PATIENT_DETAILS","ADD_PATIENT_SUCCESS","ADD_PATIENT_ERROR","DELETE_PATIENT_SUCCESS","DELETE_PATIENT_ERROR","UPDATE_PATIENT_SUCCESS","UPDATE_PATIENT_ERROR","GET_USER","GET_USER_SUCCESS","GET_USER_ERROR","ADD_USER_SUCCESS","ADD_USER_ERROR","UPDATE_USER_SUCCESS","UPDATE_USER_ERROR","RESET_PASSWORD","USER_LOGOUT","PatientContext","initialState","patients","patient","isEdit","isLoading","isError","message","reducer","state","action","actionTypes","payload","PatientContextProvider","useReducer","patientsData","setPatientsData","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","account","componentWillMount","handleChange","event","setState","handleImageChange","image","files","profilePictureHandler","preventDefault","updateFormValues","buttonLoading","firstName","lastName","phoneNumber","username","country","profilePicture","uiLoading","imageError","this","content","toolbar","CircularProgress","size","uiProgess","Card","clsx","root","CardContent","locationText","gutterBottom","startIcon","uploadButton","customError","progress","Divider","md","disabled","CardActions","submitButton","progess","withStyles","flexGrow","padding","mixins","height","flexShrink","paddingLeft","buttonProperty","position","top","zIndex","left","marginLeft","fontSize","TextInput","InputLabelProps","shrink","overflow","fixedHeight","actionButtons","seeMore","tableHeader","borderLeft","tableBody","Patients","patientDetails","setPatientDetails","getData","ActionTypes","startOfMonth","moment","clone","startOf","toISOString","collection","where","orderBy","get","patientsList","docs","map","doc","data","docId","handleDelete","delete","deletePatients","Paper","length","Table","TableHead","TableRow","TableCell","TableBody","row","createdDate","format","scan","referredBy","referedBy","amount","patientData","updatedDate","update","updatePatients","add","addPatients","uv","pv","amt","Reports","activeIndex","setActiveIndex","activeItem","handleClick","useCallback","entry","index","XAxis","dataKey","YAxis","Bar","Cell","cursor","fill","menuButton","marginRight","title","paddingRight","toolbarIcon","justifyContent","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","whiteSpace","overflowX","breakpoints","up","paddingTop","paddingBottom","Home","open","setOpen","anchorEl","setAnchorEl","useRouteMatch","path","handleClose","url","AppBar","Toolbar","IconButton","edge","aria-label","menuButtonHidden","noWrap","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","NavLink","Drawer","drawerPaper","drawerPaperClose","logo","List","appBarSpacer","exact","Profile","Navigation","createMuiTheme","red","A400","background","default","ReactDOM","StrictMode","basename","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.958b6f1e.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const auth = app.auth();\nexport default app;\n\nexport const db = app.firestore();\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-16 00:08:07\n * @modify date 2021-05-16 00:53:05\n * @desc [description]\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password);\n    }\n\n    function logout() {\n        return auth.signOut();\n    }\n\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email);\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((user) => {\n            // console.log(user);\n            setCurrentUser(user);\n            setLoading(false);\n        });\n\n        return unsubscribe;\n    }, []);\n\n    const value = {\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../store/UserContext';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    const { currentUser } = useAuth();\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                return currentUser ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/signin\" />\n                );\n            }}\n        ></Route>\n    );\n}\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 18:38:14\n * @modify date 2021-05-15 18:38:14\n * @desc [description]\n */\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link\n                color=\"inherit\"\n                href=\"https://www.linkedin.com/in/praveen-reddy-b8481b77/\"\n            >\n                Praveen Reedy Reddivari\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nexport default Copyright;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 16:16:31\n * @modify date 2021-05-18 12:07:44\n * @desc [description]\n */\nimport moment from 'moment';\nimport { db, auth } from '../firebase';\n\nexport const getUser = ({ email, password }) => {\n    return new Promise((resolve, reject) => {\n        auth.signInWithEmailAndPassword(email, password)\n            .then((res) => {\n                resolve();\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const signup = ({ email, password }) => {\n    return new Promise((resolve, reject) => {\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((res) => {\n                resolve();\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getPatients = () => {\n    return new Promise((resolve, reject) => {\n        let startOfMonth = moment().clone().startOf('month').toISOString();\n        db.collection('patients')\n            .where('createdDate', '>=', startOfMonth)\n            .orderBy('createdDate', 'asc')\n            .get()\n            .then((res) => {\n                let patientsList = res.docs.map((doc) => {\n                    return { ...doc.data(), docId: doc.id };\n                });\n                resolve(patientsList);\n            })\n            .catch((error) => {\n                console.log(error);\n                reject('Oops!! Something went wrong. Please try again.');\n            });\n    });\n};\n\nexport const updatePatients = (patientDetails) => {\n    let { docId, ...patientData } = patientDetails;\n    return new Promise((resolve, reject) => {\n        db.collection('patients')\n            .doc(docId)\n            .update(patientData)\n            .then((res) => {\n                console.log(res);\n                resolve(res);\n            })\n            .catch((error) =>\n                reject('Oops!! Something went wrong. Please try again.')\n            );\n    });\n};\n\nexport const addPatients = (patientDetails) => {\n    let { docId, ...patientData } = patientDetails;\n    return new Promise((resolve, reject) => {\n        db.collection('patients')\n            .add(patientData)\n            .then((res) => {\n                resolve(res.id);\n            })\n            .catch((error) =>\n                reject('Oops!! Something went wrong. Please try again.')\n            );\n    });\n};\n\nexport const deletePatients = (patientDetails) => {\n    let { docId, ...patientData } = patientDetails;\n    return new Promise((resolve, reject) => {\n        db.collection('patients')\n            .doc(docId)\n            .delete()\n            .then((res) => {\n                resolve(res);\n            })\n            .catch((error) =>\n                reject('Oops!! Something went wrong. Please try again.')\n            );\n    });\n};\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 18:11:13\n * @modify date 2021-05-15 18:11:13\n * @desc [description]\n */\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nimport Copyright from '../../components/Copyright';\nimport { useAuth } from '../../store/UserContext';\nimport { getUser } from '../../services';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn() {\n    const classes = useStyles();\n    const [details, setDetails] = useState({});\n    const history = useHistory();\n    const { login } = useAuth();\n\n    const handelChange = (e) => {\n        let { name, value } = e.target;\n        setDetails({\n            ...details,\n            [name]: value,\n        });\n    };\n\n    const handelSubmit = async () => {\n        console.log('------------');\n        getUser(details)\n            .then((res) => {\n                console.log(res);\n                history.push('/home');\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={details.email}\n                    onChange={handelChange}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    value={details.password}\n                    onChange={handelChange}\n                />\n                <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                />\n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={handelSubmit}\n                >\n                    Sign In\n                </Button>\n                <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                            Forgot password?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link href=\"/signup\" variant=\"body2\">\n                            {\"Don't have an account? Sign Up\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 18:13:14\n * @modify date 2021-05-15 18:13:14\n * @desc [description]\n */\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Copyright from '../../components/Copyright';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        value=\"allowExtraEmails\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/signin\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 15:55:34\n * @modify date 2021-05-15 23:51:40\n * @desc [description]\n */\nexport default Object.freeze({\n    GET_PATIENTS: 'GET_PATIENTS',\n    GET_PATIENTS_SUCCESS: 'GET_PATIENTS_SUCCESS',\n    GET_PATIENTS_ERROR: 'GET_PATIENTS_ERROR',\n    SET_PATIENT_DETAILS: 'SET_PATIENT_DETAILS',\n    ADD_PATIENT_SUCCESS: 'ADD_PATIENT_SUCCESS',\n    ADD_PATIENT_ERROR: 'ADD_PATIENT_ERROR',\n    DELETE_PATIENT_SUCCESS: 'DELETE_PATIENT_SUCCESS',\n    DELETE_PATIENT_ERROR: 'DELETE_PATIENT_ERROR',\n    UPDATE_PATIENT_SUCCESS: 'UPDATE_PATIENT_SUCCESS',\n    UPDATE_PATIENT_ERROR: 'UPDATE_PATIENT_ERROR',\n\n    GET_USER: 'GET_USER',\n    GET_USER_SUCCESS: 'GET_USER_SUCCESS',\n    GET_USER_ERROR: 'GET_USER_ERROR',\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\n    ADD_USER_ERROR: 'ADD_USER_ERROR',\n    UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS',\n    UPDATE_USER_ERROR: 'UPDATE_USER_ERROR',\n    RESET_PASSWORD: 'RESET_PASSWORD',\n    USER_LOGOUT: 'USER_LOGOUT',\n});\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 15:34:19\n * @modify date 2021-05-18 12:09:37\n * @desc [description]\n */\nimport React, { createContext, useReducer } from 'react';\nimport actionTypes from '../constants/ActionTypes';\n\nexport const PatientContext = createContext();\n\nlet initialState = {\n    patients: [],\n    patient: {},\n    isEdit: false,\n    isLoading: true,\n    isError: false,\n    message: '',\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.GET_PATIENTS: {\n            return {\n                ...state,\n                isLoading: true,\n            };\n        }\n        case actionTypes.GET_PATIENTS_SUCCESS: {\n            return {\n                ...state,\n                isLoading: false,\n                isEdit: false,\n                patients: action.payload,\n            };\n        }\n        case actionTypes.GET_PATIENTS_ERROR: {\n            return {\n                ...state,\n                isError: true,\n                message: action.payload,\n                isLoading: false,\n            };\n        }\n\n        case actionTypes.SET_PATIENT_DETAILS: {\n            return {\n                ...state,\n                isEdit: !!action.payload,\n                patient: action.payload || {},\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nconst PatientContextProvider = (props) => {\n    const [patientsData, setPatientsData] = useReducer(reducer, initialState);\n\n    return (\n        <PatientContext.Provider value={{ patientsData, setPatientsData }}>\n            {props.children}\n        </PatientContext.Provider>\n    );\n};\n\nexport default PatientContextProvider;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 19:15:36\n * @modify date 2021-05-15 19:15:36\n * @desc [description]\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n    <div>\n        <ListItem button component={Link} to=\"/patients\">\n            <ListItemIcon>\n                <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Patients\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/reports\">\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\" />\n        </ListItem>\n    </div>\n);\n\nexport const secondaryListItems = (\n    <div>\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Current month\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Last quarter\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Year-end sale\" />\n        </ListItem>\n    </div>\n);\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 17:39:51\n * @modify date 2021-05-15 22:47:08\n * @desc [description]\n */\nimport React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Button,\n    Grid,\n    TextField,\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\n\n// import axios from 'axios';\n// import { authMiddleWare } from '../util/auth';\n\nconst styles = (theme) => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n    root: {},\n    details: {\n        display: 'flex',\n    },\n    avatar: {\n        height: 110,\n        width: 100,\n        flexShrink: 0,\n        flexGrow: 0,\n    },\n    locationText: {\n        paddingLeft: '15px',\n    },\n    buttonProperty: {\n        position: 'absolute',\n        top: '50%',\n    },\n    uiProgess: {\n        position: 'fixed',\n        zIndex: '1000',\n        height: '31px',\n        width: '31px',\n        left: '50%',\n        top: '35%',\n    },\n    progess: {\n        position: 'absolute',\n    },\n    uploadButton: {\n        marginLeft: '8px',\n        margin: theme.spacing(1),\n    },\n    customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10,\n    },\n    submitButton: {\n        marginTop: '10px',\n    },\n});\n\nclass account extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phoneNumber: '',\n            username: '',\n            country: '',\n            profilePicture: '',\n            uiLoading: false,\n            buttonLoading: false,\n            imageError: '',\n        };\n    }\n\n    componentWillMount = () => {\n        // authMiddleWare(this.props.history);\n        // const authToken = localStorage.getItem('AuthToken');\n        // axios.defaults.headers.common = { Authorization: `${authToken}` };\n        // axios\n        //     .get('/user')\n        //     .then((response) => {\n        //         console.log(response.data);\n        //         this.setState({\n        //             firstName: response.data.userCredentials.firstName,\n        //             lastName: response.data.userCredentials.lastName,\n        //             email: response.data.userCredentials.email,\n        //             phoneNumber: response.data.userCredentials.phoneNumber,\n        //             country: response.data.userCredentials.country,\n        //             username: response.data.userCredentials.username,\n        //             uiLoading: false,\n        //         });\n        //     })\n        //     .catch((error) => {\n        //         if (error.response.status === 403) {\n        //             this.props.history.push('/login');\n        //         }\n        //         console.log(error);\n        //         this.setState({ errorMsg: 'Error in retrieving the data' });\n        //     });\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    handleImageChange = (event) => {\n        this.setState({\n            image: event.target.files[0],\n        });\n    };\n\n    profilePictureHandler = (event) => {\n        event.preventDefault();\n        // this.setState({\n        //     uiLoading: true,\n        // });\n        // authMiddleWare(this.props.history);\n        // const authToken = localStorage.getItem('AuthToken');\n        // let form_data = new FormData();\n        // form_data.append('image', this.state.image);\n        // form_data.append('content', this.state.content);\n        // axios.defaults.headers.common = { Authorization: `${authToken}` };\n        // axios\n        //     .post('/user/image', form_data, {\n        //         headers: {\n        //             'content-type': 'multipart/form-data',\n        //         },\n        //     })\n        //     .then(() => {\n        //         window.location.reload();\n        //     })\n        //     .catch((error) => {\n        //         if (error.response.status === 403) {\n        //             this.props.history.push('/login');\n        //         }\n        //         console.log(error);\n        //         this.setState({\n        //             uiLoading: false,\n        //             imageError: 'Error in posting the data',\n        //         });\n        //     });\n    };\n\n    updateFormValues = (event) => {\n        event.preventDefault();\n        this.setState({ buttonLoading: true });\n        // authMiddleWare(this.props.history);\n        // const authToken = localStorage.getItem('AuthToken');\n        // axios.defaults.headers.common = { Authorization: `${authToken}` };\n        // const formRequest = {\n        //     firstName: this.state.firstName,\n        //     lastName: this.state.lastName,\n        //     country: this.state.country,\n        // };\n        // axios\n        //     .post('/user', formRequest)\n        //     .then(() => {\n        //         this.setState({ buttonLoading: false });\n        //     })\n        //     .catch((error) => {\n        //         if (error.response.status === 403) {\n        //             this.props.history.push('/login');\n        //         }\n        //         console.log(error);\n        //         this.setState({\n        //             buttonLoading: false,\n        //         });\n        //     });\n    };\n\n    render() {\n        const { classes, ...rest } = this.props;\n        if (this.state.uiLoading === true) {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    {this.state.uiLoading && (\n                        <CircularProgress\n                            size={150}\n                            className={classes.uiProgess}\n                        />\n                    )}\n                </main>\n            );\n        } else {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Card {...rest} className={clsx(classes.root, classes)}>\n                        <CardContent>\n                            <div className={classes.details}>\n                                <div>\n                                    <Typography\n                                        className={classes.locationText}\n                                        gutterBottom\n                                        variant=\"h4\"\n                                    >\n                                        {this.state.firstName}{' '}\n                                        {this.state.lastName}\n                                    </Typography>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                        size=\"small\"\n                                        startIcon={<CloudUploadIcon />}\n                                        className={classes.uploadButton}\n                                        onClick={this.profilePictureHandler}\n                                    >\n                                        Upload Photo\n                                    </Button>\n                                    <input\n                                        type=\"file\"\n                                        onChange={this.handleImageChange}\n                                    />\n\n                                    {this.state.imageError ? (\n                                        <div className={classes.customError}>\n                                            {' '}\n                                            Wrong Image Format || Supported\n                                            Format are PNG and JPG\n                                        </div>\n                                    ) : (\n                                        false\n                                    )}\n                                </div>\n                            </div>\n                            <div className={classes.progress} />\n                        </CardContent>\n                        <Divider />\n                    </Card>\n\n                    <br />\n                    <Card {...rest} className={clsx(classes.root, classes)}>\n                        <form autoComplete=\"off\" noValidate>\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={3}>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"First name\"\n                                            margin=\"dense\"\n                                            name=\"firstName\"\n                                            variant=\"outlined\"\n                                            value={this.state.firstName}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Last name\"\n                                            margin=\"dense\"\n                                            name=\"lastName\"\n                                            variant=\"outlined\"\n                                            value={this.state.lastName}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            margin=\"dense\"\n                                            name=\"email\"\n                                            variant=\"outlined\"\n                                            disabled={true}\n                                            value={this.state.email}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Phone Number\"\n                                            margin=\"dense\"\n                                            name=\"phone\"\n                                            type=\"number\"\n                                            variant=\"outlined\"\n                                            disabled={true}\n                                            value={this.state.phoneNumber}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"User Name\"\n                                            margin=\"dense\"\n                                            name=\"userHandle\"\n                                            disabled={true}\n                                            variant=\"outlined\"\n                                            value={this.state.username}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Country\"\n                                            margin=\"dense\"\n                                            name=\"country\"\n                                            variant=\"outlined\"\n                                            value={this.state.country}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                            <Divider />\n                            <CardActions />\n                        </form>\n                    </Card>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        className={classes.submitButton}\n                        onClick={this.updateFormValues}\n                        disabled={\n                            this.state.buttonLoading ||\n                            !this.state.firstName ||\n                            !this.state.lastName ||\n                            !this.state.country\n                        }\n                    >\n                        Save details\n                        {this.state.buttonLoading && (\n                            <CircularProgress\n                                size={30}\n                                className={classes.progess}\n                            />\n                        )}\n                    </Button>\n                </main>\n            );\n        }\n    }\n}\n\nexport default withStyles(styles)(account);\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-11 19:40:41\n * @modify date 2021-05-11 19:40:41\n * @desc [description]\n */\nimport React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextInput(props) {\n    if (!props.value) {\n        return <TextField {...props} value=\"\" />;\n    }\n    return (\n        <TextField\n            {...props}\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    );\n}\n\nexport default TextInput;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 23:11:04\n * @modify date 2021-05-15 23:11:04\n * @desc [description]\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { PatientContext } from '../../store/PatientContext';\nimport TextInput from '../../components/TextInput';\n\nimport ActionTypes from '../../constants/ActionTypes';\nimport {\n    getPatients,\n    addPatients,\n    updatePatients,\n    deletePatients,\n} from '../../services';\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    actionButtons: {\n        '& > button': {\n            margin: theme.spacing(1),\n        },\n    },\n    seeMore: {\n        marginTop: 10,\n    },\n    tableHeader: {\n        backgroundColor: '#e0e0e0',\n        '& th': {\n            borderLeft: '1px solid #ededed',\n            padding: '5px 10px',\n        },\n    },\n    tableBody: {\n        '& td': {\n            padding: '5px 10px',\n        },\n    },\n}));\n\nfunction Patients() {\n    const classes = useStyles();\n    const { patientsData, setPatientsData } = useContext(PatientContext);\n    const { patients, isLoading, patient, isEdit } = patientsData;\n\n    const [patientDetails, setPatientDetails] = useState(patient);\n\n    useEffect(() => {\n        setPatientDetails(patient);\n    }, [patient]);\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const getData = () => {\n        setPatientsData({ type: ActionTypes.GET_PATIENTS });\n        getPatients()\n            .then((res) => {\n                console.log(res);\n                setPatientsData({\n                    type: ActionTypes.GET_PATIENTS_SUCCESS,\n                    payload: res,\n                });\n            })\n            .catch((error) => {\n                setPatientsData({\n                    type: ActionTypes.GET_PATIENTS_ERROR,\n                    payload: error,\n                });\n            });\n    };\n\n    const handleChange = (e) => {\n        let { name, value } = e.target;\n        setPatientDetails({\n            ...patientDetails,\n            [name]: value,\n        });\n    };\n    const handleAddUpdate = () => {\n        let patientData = {\n            ...patientDetails,\n            createdDate: patientDetails.createdDate\n                ? patientDetails.createdDate\n                : new Date().toISOString(),\n            updatedDate: new Date().toISOString(),\n        };\n        setPatientDetails(patientData);\n\n        if (isEdit) {\n            updatePatients(patientData)\n                .then((res) => {\n                    console.log(res);\n                    setPatientDetails({});\n                    getData();\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n\n        if (!isEdit) {\n            addPatients(patientData)\n                .then((res) => {\n                    console.log(res);\n                    setPatientDetails({});\n                    getData();\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    };\n\n    const handleDelete = (data) => {\n        deletePatients(data)\n            .then((res) => {\n                console.log(res);\n                setPatientDetails({});\n                getData();\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    return (\n        <>\n            <Grid item xs={8}>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        gutterBottom\n                    >\n                        Patients List\n                    </Typography>\n                    {patients.length > 0 ? (\n                        <Table size=\"small\">\n                            <TableHead className={classes.tableHeader}>\n                                <TableRow>\n                                    <TableCell>Date</TableCell>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell>Scan</TableCell>\n                                    <TableCell>Referred By</TableCell>\n                                    <TableCell align=\"right\">Amount</TableCell>\n                                    <TableCell align=\"right\">Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody className={classes.tableBody}>\n                                {patients.map((row) => (\n                                    <TableRow key={row.id}>\n                                        <TableCell>\n                                            {moment(row.createdDate).format(\n                                                'DD MMM, YYYY'\n                                            )}\n                                        </TableCell>\n                                        <TableCell>{row.name}</TableCell>\n                                        <TableCell>{row.scan}</TableCell>\n                                        <TableCell>\n                                            {row.referredBy || row.referedBy}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {row.amount}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Button\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    setPatientsData({\n                                                        type: ActionTypes.SET_PATIENT_DETAILS,\n                                                        payload: row,\n                                                    });\n                                                }}\n                                            >\n                                                Edit\n                                            </Button>\n                                            <Button\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    handleDelete(row);\n                                                }}\n                                            >\n                                                Delete\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    ) : (\n                        <div className=\"zero-state\">No Data</div>\n                    )}\n                    {patients.length > 0 && (\n                        <div className={classes.seeMore}>\n                            <Link\n                                color=\"primary\"\n                                href=\"#\"\n                                onClick={preventDefault}\n                            >\n                                See more\n                            </Link>\n                        </div>\n                    )}\n                </Paper>\n            </Grid>\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        gutterBottom\n                    >\n                        {isEdit ? 'Update' : 'Add'} Patient\n                    </Typography>\n                    <form\n                        className={classes.form}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <Grid spacing={2} container>\n                            <Grid item xs={12}>\n                                <TextInput\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"name\"\n                                    label=\"Patient Name\"\n                                    name=\"name\"\n                                    size=\"small\"\n                                    value={patientDetails.name}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextInput\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"Scan\"\n                                    label=\"Scan\"\n                                    name=\"scan\"\n                                    size=\"small\"\n                                    value={patientDetails.scan}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextInput\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"amount\"\n                                    label=\"Amount\"\n                                    name=\"amount\"\n                                    type=\"number\"\n                                    size=\"small\"\n                                    value={patientDetails.amount}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextInput\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"referral\"\n                                    label=\"Referred By\"\n                                    name=\"referredBy\"\n                                    size=\"small\"\n                                    value={patientDetails.referredBy}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid\n                                item\n                                xs={12}\n                                className={classes.actionButtons}\n                            >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleAddUpdate}\n                                >\n                                    {isEdit ? 'Update' : 'Add'}\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={() => {\n                                        setPatientDetails({});\n                                        setPatientsData({\n                                            type: ActionTypes.SET_PATIENT_DETAILS,\n                                            payload: null,\n                                        });\n                                    }}\n                                >\n                                    Clear\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Paper>\n            </Grid>\n        </>\n    );\n}\n\nexport default Patients;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 23:18:18\n * @modify date 2021-05-15 23:18:18\n * @desc [description]\n */\nimport React, { useState, useCallback } from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis } from 'recharts';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n}));\n\nconst data = [\n    {\n        name: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: 'Page C',\n        uv: 2000,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: 'Page D',\n        uv: 2780,\n        pv: 3908,\n        amt: 2000,\n    },\n    {\n        name: 'Page E',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181,\n    },\n    {\n        name: 'Page F',\n        uv: 2390,\n        pv: 3800,\n        amt: 2500,\n    },\n    {\n        name: 'Page G',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100,\n    },\n];\n\nfunction Reports() {\n    const classes = useStyles();\n    const [activeIndex, setActiveIndex] = useState(0);\n    const activeItem = data[activeIndex];\n\n    const handleClick = useCallback(\n        (entry, index) => {\n            setActiveIndex(index);\n        },\n        [setActiveIndex]\n    );\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                <Typography\n                    component=\"h2\"\n                    variant=\"h6\"\n                    color=\"primary\"\n                    gutterBottom\n                >\n                    Report\n                </Typography>\n\n                <div>\n                    <BarChart width={400} height={200} data={data}>\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Bar dataKey=\"uv\" onClick={handleClick}>\n                            {data.map((entry, index) => (\n                                <Cell\n                                    cursor=\"pointer\"\n                                    fill={\n                                        index === activeIndex\n                                            ? '#82ca9d'\n                                            : '#8884d8'\n                                    }\n                                    key={`cell-${index}`}\n                                />\n                            ))}\n                        </Bar>\n                    </BarChart>\n                    <p className=\"content\">{`Total ${activeItem.uv} Patients referred by Dr. ${activeItem.name}`}</p>\n                </div>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default Reports;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 23:17:45\n * @modify date 2021-05-15 23:18:09\n * @desc [description]\n */\nimport Reports from './Reports';\n\nexport default Reports;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Link as NavLink,\n    Route,\n    Switch,\n    useRouteMatch,\n    useHistory,\n} from 'react-router-dom';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems, secondaryListItems } from './components/SideMenuItems';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport Copyright from '../../components/Copyright';\nimport Profile from '../Profile';\nimport Patients from '../Patients/Patients';\nimport Reports from '../Reports';\nimport { PatientContext } from '../../store/PatientContext';\nimport { useAuth } from '../../store/UserContext';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        padding: 0,\n        alignItems: 'unset',\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    avatar: {\n        height: 110,\n        width: 100,\n        flexShrink: 0,\n        flexGrow: 0,\n        marginTop: 20,\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    actionButtons: {\n        '& > button': {\n            margin: theme.spacing(1),\n        },\n    },\n    logo: {\n        display: 'flex',\n    },\n}));\n\nexport default function Home() {\n    const { patientsData, setPatientsData } = useContext(PatientContext);\n    const classes = useStyles();\n    const [open, setOpen] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const history = useHistory();\n    const { logout } = useAuth();\n\n    let { path, url } = useRouteMatch();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"absolute\"\n                className={clsx(\n                    classes.appBar,\n                    open && classes.appBarShift,\n                    open && 'appbar-open'\n                )}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(\n                            classes.menuButton,\n                            open && classes.menuButtonHidden\n                        )}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.title}\n                    >\n                        {/* Patients */}\n                    </Typography>\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-app-bar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-app-bar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={!!anchorEl}\n                            onClose={handleClose}\n                        >\n                            <MenuItem\n                                onClick={handleClose}\n                                component={NavLink}\n                                to=\"/profile\"\n                            >\n                                Profile\n                            </MenuItem>\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(\n                        classes.drawerPaper,\n                        !open && classes.drawerPaperClose\n                    ),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <Typography\n                        variant=\"h6\"\n                        color=\"primary\"\n                        noWrap\n                        className={classes.logo}\n                    >\n                        <LocalHospitalIcon />\n                    </Typography>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>{mainListItems}</List>\n                {/* <Divider />\n                <List>{secondaryListItems}</List> */}\n                <Divider />\n                <List>\n                    <ListItem\n                        button\n                        key=\"Logout\"\n                        onClick={() => {\n                            logout();\n                            history.push('/signin');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <ExitToAppIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Logout\" />\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={2}>\n                        <Switch>\n                            <Route\n                                exact\n                                path={`${path}profile`}\n                                component={Profile}\n                            />\n                            <Route\n                                exact\n                                path={`${path}`}\n                                component={Patients}\n                            />\n                            <Route\n                                exact\n                                path={`${path}patients`}\n                                component={Patients}\n                            />\n                            <Route\n                                exact\n                                path={`${path}reports`}\n                                component={Reports}\n                            />\n                        </Switch>\n                    </Grid>\n\n                    <Box mt={8}>\n                        <Copyright />\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 17:39:42\n * @modify date 2021-05-16 00:50:59\n * @desc [description]\n */\nimport React from 'react';\n\nimport PatientContextProvider from '../../store/PatientContext';\nimport Home from './Home';\n\nexport default () => {\n    return (\n        <PatientContextProvider>\n            <Home />\n        </PatientContextProvider>\n    );\n};\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 17:43:22\n * @modify date 2021-05-15 17:43:22\n * @desc [description]\n */\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { AuthProvider } from './store/UserContext';\nimport PrivateRoute from './components/PrivateRoute';\nimport { SignIn, SignUp } from './pages/User';\nimport Home from './pages/Home';\n\nfunction Navigation() {\n    return (\n        <AuthProvider>\n            <Switch>\n                <Route path=\"/signin\" component={SignIn} />\n                <Route path=\"/signup\" component={SignUp} />\n                <PrivateRoute path=\"/home\" component={Home} />\n                <PrivateRoute path=\"/\" component={Home} />\n            </Switch>\n        </AuthProvider>\n    );\n}\n\nexport default Navigation;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-15 17:58:44\n * @modify date 2021-05-15 17:58:45\n * @desc [description]\n */\nimport { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport Navigation from './Navigation';\nimport theme from './theme';\n\nimport './App.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Navigation />\n            </ThemeProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}